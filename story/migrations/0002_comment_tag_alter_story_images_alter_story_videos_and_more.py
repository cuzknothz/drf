# Generated by Django 4.1.7 on 2023-03-02 09:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('story', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='', max_length=5000)),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='story.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
            ],
        ),
        migrations.AlterField(
            model_name='story',
            name='images',
            field=models.ManyToManyField(related_name='story_images', through='story.StoryImage', to='story.image'),
        ),
        migrations.AlterField(
            model_name='story',
            name='videos',
            field=models.ManyToManyField(related_name='story_videos', through='story.StoryVideo', to='story.video'),
        ),
        migrations.AlterField(
            model_name='video',
            name='src',
            field=models.FileField(blank=True, null=True, upload_to='static/videos/story'),
        ),
        migrations.CreateModel(
            name='StoryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.story')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.tag')),
            ],
        ),
        migrations.CreateModel(
            name='StorySave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StoryLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StoryComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.comment')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story.story')),
            ],
        ),
        migrations.AddField(
            model_name='story',
            name='comments',
            field=models.ManyToManyField(related_name='story_comment', through='story.StoryComment', to='story.comment'),
        ),
        migrations.AddField(
            model_name='story',
            name='likes',
            field=models.ManyToManyField(related_name='story_like', through='story.StoryLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='saved',
            field=models.ManyToManyField(related_name='story_save', through='story.StorySave', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='tags',
            field=models.ManyToManyField(related_name='story_tag', through='story.StoryTag', to='story.tag'),
        ),
    ]
