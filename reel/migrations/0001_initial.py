# Generated by Django 4.1.7 on 2023-03-03 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='', max_length=5000)),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reel_replies', to='reel.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reel_comment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption_text', models.TextField(max_length=5000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.FileField(blank=True, null=True, upload_to='static/videos/reel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReelVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.video')),
            ],
        ),
        migrations.CreateModel(
            name='ReelTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.tag')),
            ],
        ),
        migrations.CreateModel(
            name='ReelSeen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReelSave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReelLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReelComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.comment')),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reel.reel')),
            ],
        ),
        migrations.AddField(
            model_name='reel',
            name='comments',
            field=models.ManyToManyField(related_name='reel_comment', through='reel.ReelComment', to='reel.comment'),
        ),
        migrations.AddField(
            model_name='reel',
            name='likes',
            field=models.ManyToManyField(related_name='reel_like', through='reel.ReelLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reel',
            name='saved',
            field=models.ManyToManyField(related_name='reel_save', through='reel.ReelSave', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reel',
            name='seen',
            field=models.ManyToManyField(related_name='reel_seen', through='reel.ReelSeen', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reel',
            name='tags',
            field=models.ManyToManyField(related_name='reel_tag', through='reel.ReelTag', to='reel.tag'),
        ),
        migrations.AddField(
            model_name='reel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reel_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reel',
            name='videos',
            field=models.ManyToManyField(through='reel.ReelVideo', to='reel.video'),
        ),
    ]
